# Generated by Django 4.2.20 on 2025-04-30 00:02

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("partner", "0001_initial"),
        ("dataset", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Competition",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Comming soon", "COMMING SOON"),
                            ("Registration", "REGISTRATION"),
                            ("Ongoing", "ONGOING"),
                            ("Closed", "CLOSED"),
                        ],
                        max_length=15,
                        null=True,
                    ),
                ),
                ("inscription_start", models.DateTimeField()),
                ("inscription_end", models.DateTimeField()),
                (
                    "partners",
                    models.ManyToManyField(
                        related_name="partner", to="partner.partner"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CompetitionPhase",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                (
                    "competition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="competition.competition",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Challenge",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.JSONField(default=dict)),
                (
                    "competition_phase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="competition.competitionphase",
                    ),
                ),
                (
                    "dataset_urls",
                    models.ManyToManyField(
                        related_name="dataset", to="dataset.dataset"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
